/*
        SCRIPT CRIAÇÃO TABELA CLIENTE
        
        
*/

CREATE TABLE CLIENTE (
    cod_cliente NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL, 
    nom_cliente VARCHAR(60) NOT NULL,
    qtd_estrelas NUMERIC(1),  
    login VARCHAR(256) NOT NULL,
    senha VARCHAR(256) NOT NULL,
    sta_cliente CHAR(1) NOT NULL,
    num_telefone NUMERIC(9),
    ddd_telefone NUMERIC(2),
    
    CONSTRAINT cliente_pk PRIMARY KEY (cod_cliente),
    CONSTRAINT ck_status_cliente CHECK (sta_cliente IN ('A', 'I'))
);

COMMENT ON COLUMN CLIENTE.cod_cliente IS 'Identificador unico do cliente';

COMMENT ON COLUMN CLIENTE.nom_cliente IS 'Nome Completo do Cliente';

COMMENT ON COLUMN CLIENTE.qtd_estrelas IS '???????????';


COMMENT ON COLUMN CLIENTE.login IS 'Usuario de login do Cliente';

COMMENT ON COLUMN CLIENTE.senha IS 'Senha de login do Cliente';

COMMENT ON COLUMN CLIENTE.sta_cliente IS 'Status do Cliente - A (ativo) ou I (inativo)';

COMMENT ON COLUMN CLIENTE.num_telefone IS 'Numero do telefone do cliente';

COMMENT ON COLUMN CLIENTE.ddd_telefone IS 'DDD do Telefone';


/*
    SCRIPT DE CRIAÇÃO DA TABELA CLIENTE_PF
*/

CREATE TABLE CLIENTE_PF (
    cod_cliente_pf NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL,
    cod_cliente NUMBER NOT NULL,
    sex_cliente CHAR(1) NOT NULL,
    dat_nascimento DATE NOT NULL,
    gen_cliente VARCHAR(15), 
    num_cpf VARCHAR(11) NOT NULL,
    
    CONSTRAINT pk_cliente_pf PRIMARY KEY (cod_cliente_pf),
    CONSTRAINT fk_cliente_pf FOREIGN KEY (cod_cliente) REFERENCES CLIENTE (cod_cliente)
); 

COMMENT ON COLUMN CLIENTE_PF.cod_cliente_pf IS 'Identificador unico do cliente pessoa fisica';

COMMENT ON COLUMN CLIENTE_PF.cod_cliente IS 'Chave Estrangeira com a Tabela cliente';

COMMENT ON COLUMN CLIENTE_PF.sex_cliente IS 'Sexo biologico do Cliente';

COMMENT ON COLUMN CLIENTE_PF.dat_nascimento IS 'Data de nascimento do cliente';

COMMENT ON COLUMN CLIENTE_PF.gen_cliente IS 'Identidade de genero do cliente';

COMMENT ON COLUMN CLIENTE_PF.num_cpf IS 'Número de CPF do cliente';


/*
    SCRIPT CRIAÇÃO TABELA CLIENTE_PJ
    
*/

CREATE TABLE CLIENTE_PJ (
    cod_cliente_pj NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL,
    cod_cliente NUMBER NOT NULL,
    num_incs_municipal NUMERIC(11),
    dat_fundacao DATE,
    num_cnpj VARCHAR(11),
    
    CONSTRAINT pk_cliente_pj PRIMARY KEY (cod_cliente_pj),
    CONSTRAINT fk_cliente_pj FOREIGN KEY (cod_cliente) REFERENCES CLIENTE (cod_cliente)
);

COMMENT ON COLUMN CLIENTE_PJ.cod_cliente_pj IS 'Identificador unico da tabela';

COMMENT ON COLUMN CLIENTE_PJ.cod_cliente IS 'Chave Estrangeira com a Tabela cliente';

COMMENT ON COLUMN CLIENTE_PJ.num_incs_municipal IS 'Número da inscrição municipal do cliente';

COMMENT ON COLUMN CLIENTE_PJ.dat_fundacao IS 'Data de fundação da empresa do cliente';

COMMENT ON COLUMN CLIENTE_PJ.num_cnpj IS 'Número do CNPJ';

/*
    Script SQL para criação da tabela CATEGORIA_PRODUTO.
    
    
*/

CREATE TABLE CATEGORIA_PRODUTO (
    cod_categoria_produto NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL,
    des_categoria_produto VARCHAR(80) NOT NULL,
    sta_categoria_produto CHAR(1) NOT NULL,
    dat_inicio DATE NOT NULL,
    dat_termino DATE,
    
    CONSTRAINT pk_categoria_produto PRIMARY KEY (cod_categoria_produto),
    CONSTRAINT uk_categoria_produto_des UNIQUE (des_categoria_produto),
    CONSTRAINT ck_sta_categoria_produto CHECK (sta_categoria_produto IN ('A', 'I'))
);

COMMENT ON COLUMN CATEGORIA_PRODUTO.cod_categoria_produto IS 'Identificador unico da categoria do produto';

COMMENT ON COLUMN CATEGORIA_PRODUTO.des_categoria_produto IS 'Descrição da Categoria do Produto';

COMMENT ON COLUMN CATEGORIA_PRODUTO.sta_categoria_produto IS 'Status da Categoria do Produto A (ativo), I (inativo)';

COMMENT ON COLUMN CATEGORIA_PRODUTO.dat_inicio IS 'Data de Inicio da Categoria do Produto';

COMMENT ON COLUMN CATEGORIA_PRODUTO.dat_termino IS 'Data de Termino da Categoria do Produto, caso esteja inativa';

/*
    Script criação Tabela PRODUTO:
    
*/

CREATE TABLE PRODUTO (
    cod_produto NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    cod_categoria_produto NUMBER NOT NULL,
    des_normal VARCHAR(60) NOT NULL,
    des_completa VARCHAR(80) NOT NULL, 
    val_produto NUMERIC(5,2) NOT NULL,
    sta_produto CHAR(1),
    cod_barras VARCHAR(13),
    
    CONSTRAINT produto_pk PRIMARY KEY (cod_produto),
    CONSTRAINT fk_categoria_produto FOREIGN KEY (cod_categoria_produto) REFERENCES CATEGORIA_PRODUTO (cod_categoria_produto),
    CONSTRAINT uk_desc_produto UNIQUE (des_normal),
    CONSTRAINT ck_status_produto CHECK (sta_produto IN ('A', 'I'))
);


COMMENT ON COLUMN PRODUTO.cod_produto IS 'O código de identificação do produto deve ser um número sequencial para ser utilizado como SEQUENCE ou IDENTITY e crescente, de acordo com novos produtos que forem sendo cadastrados.';

COMMENT ON COLUMN PRODUTO.cod_categoria_produto IS 'Chave Estrangeira com a tabela categoria_produto';

COMMENT ON COLUMN PRODUTO.des_normal IS 'Descrição normal do produto. Constraint do tipo UNIQUE'; 

COMMENT ON COLUMN PRODUTO.des_completa IS 'Descrição completa do produto.';

COMMENT ON COLUMN PRODUTO.val_produto IS 'Este é o preço unitário.';

COMMENT ON COLUMN PRODUTO.sta_produto IS 'O Status do produto indica se ele está ativo ou inativo no ecommerce. “A” (ativo) e  I(nativo). Criar uma check constraint.';

COMMENT ON COLUMN PRODUTO.cod_barras IS 'O código de barras deve ser padrão EAN13 ou correspondente.';

/*
    Script criação Tabela FORNECEDOR DE VÍDEO:

*/

CREATE TABLE FORNECEDOR_VIDEO (
    cod_fornecedor_video NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    desc_email_fornecedor_video VARCHAR(30) NOT NULL,
    num_cnpj_fornecedor_video NUMERIC(18) NOT NULL,
    num_telefone_fornecedor_video NUMBER NOT NULL,

    CONSTRAINT fornecedor_video_pk PRIMARY KEY (cod_fornecedor_video)
);


COMMENT ON COLUMN FORNECEDOR_VIDEO.cod_fornecedor_video IS 'O código de identificação do fornecedor de video deve ser um número sequencial para ser utilizado como SEQUENCE ou IDENTITY e crescente, de acordo com novos fornecedores exclusivamente de video cadastrados.';

COMMENT ON COLUMN FORNECEDOR_VIDEO.desc_email_fornecedor_video IS 'Descrição do e-mail de contato do fornecedor de vídeo.';

COMMENT ON COLUMN FORNECEDOR_VIDEO.num_telefone_fornecedor_video IS 'Preenchimento obrigatório do número do CNPJ contendo 18 dígitos.';

COMMENT ON COLUMN FORNECEDOR_VIDEO.num_cnpj_fornecedor_video IS 'Preenchimento obrigatório do telefone de contato do formnecedor de video';

/*
    SCRIPT CRIAÇÃO TABELA CLASSIFICACAO_VIDEO
*/

CREATE TABLE CLASSIFICACAO_VIDEO (
    cod_classificacao_video NUMBER GENERATED ALWAYS AS IDENTITY,
    tip_classificacao VARCHAR(40),
    CONSTRAINT pk_classificacao_video PRIMARY KEY (cod_classificacao_video)
);

COMMENT ON COLUMN CLASSIFICACAO_VIDEO.cod_classificacao_video IS 'Código que identifica o tipo de classificação.';

COMMENT ON COLUMN CLASSIFICACAO_VIDEO.tip_classificacao IS 'Cada vídeo deve ser classificado e existem diversos tipos de classificação';

/*
    SCRIPT CRIAÇÃO TABELA VIDEO_PRODUTO
*/

CREATE TABLE VIDEO_PRODUTO (
    cod_video_produto NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL, 
    cod_fornecedor_video NUMBER(4) NOT NULL,
    cod_classificacao_video NUMBER NOT NULL,
    cod_produto NUMBER(6) NOT NULL,
    cod_categoria_produto NUMBER(3) NOT NULL,
    qtd_video NUMBER(3),
    sta_video CHAR(1),
    dat_cadastro DATE,
    CONSTRAINT pk_video_produto PRIMARY KEY (cod_video_produto),
    CONSTRAINT fk_video_produto_fornecedor_video FOREIGN KEY (cod_fornecedor_video) REFERENCES FORNECEDOR_VIDEO (cod_fornecedor_video),
    CONSTRAINT fk_video_produto_produto FOREIGN KEY (cod_produto) REFERENCES PRODUTO (cod_produto),
    CONSTRAINT fk_video_produto_categoria_produto FOREIGN KEY (cod_categoria_produto) REFERENCES CATEGORIA_PRODUTO (cod_categoria_produto),
    CONSTRAINT fk_video_produto_classificacao_video FOREIGN KEY (cod_classificacao_video) REFERENCES CLASSIFICACAO_VIDEO (cod_classificacao_video),
    CONSTRAINT ck_sta_video CHECK (sta_video IN ('A', 'I'))
);

COMMENT ON COLUMN VIDEO_PRODUTO.cod_video_produto IS 'O código único do vídeo produto';

COMMENT ON COLUMN VIDEO_PRODUTO.cod_fornecedor_video IS 'Chave Estrangeira com a tabela Fornecedor';

COMMENT ON COLUMN VIDEO_PRODUTO.cod_produto IS 'O código de identificação do produto deve ser um número sequencial para ser utilizado como SEQUENCE ou IDENTITY e crescente, de acordo com novos produtos que forem sendo cadastrados.';

COMMENT ON COLUMN VIDEO_PRODUTO.cod_categoria_produto IS 'O código da categoria deve ser um número sequencial para ser utilizado como. SEQUENCE ou IDENTITY e crescente. ';

COMMENT ON COLUMN VIDEO_PRODUTO.qtd_video IS 'Quantidade total visualicações do Video';

COMMENT ON COLUMN VIDEO_PRODUTO.sta_video IS 'O status indica se o vídeo está Ativo (A) ou Inativo(I). Vídeos inativos não podem ter visualização.';

COMMENT ON COLUMN VIDEO_PRODUTO.dat_cadastro IS 'Data de cadastro do video';

/*
    SCRIPT CRIAÇÃO TABELA VISUALIZACAO_VIDEO
*/

CREATE TABLE VISUALIZACAO_VIDEO (
    cod_visualizacao_video NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL,
    cod_video_produto NUMBER NOT NULL,
    cod_cliente NUMBER (6),
    tes_visualizacao TIMESTAMP NOT NULL,
    CONSTRAINT pk_visualizacao_video PRIMARY KEY (cod_visualizacao_video),
    CONSTRAINT fk_visualizacao_video_video_produto FOREIGN KEY (cod_video_produto) REFERENCES VIDEO_PRODUTO (cod_video_produto),
    CONSTRAINT fk_visualizacao_video_cliente FOREIGN KEY (cod_cliente) REFERENCES CLIENTE (cod_cliente)
);

COMMENT ON COLUMN VISUALIZACAO_VIDEO.cod_visualizacao_video IS 'A data e hora da visualização são informações obrigatórias, bem como o código do produto visualizado.';

COMMENT ON COLUMN VISUALIZACAO_VIDEO.cod_video_produto IS 'O código único do vídeo';

COMMENT ON COLUMN VISUALIZACAO_VIDEO.cod_cliente IS '';

COMMENT ON COLUMN VISUALIZACAO_VIDEO.tes_visualizacao IS 'Existe a necessidade de se armazenar a data, hora, minutos e segundos da visualização do vídeo.';

/*
    Script criação Tabela CHAMADO:

*/

CREATE TABLE CHAMADO (
    cod_chamado NUMBER(10) GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    cod_produto NUMBER NOT NULL,
    cod_cliente NUMBER NOT NULL,
    sta_chamado CHAR(1) NOT NULL,
    des_chamado VARCHAR(80) NOT NULL,
    tip_chamado NUMBER(1) NOT NULL,
    dat_abertura TIMESTAMP NOT NULL,
    dat_fechamento TIMESTAMP,
    tot_horas_chamado FLOAT NOT NULL,
    ind_satisfacao NUMBER(2),

    CONSTRAINT cod_chamado PRIMARY KEY (cod_chamado),
    CONSTRAINT fk_chamado_cod_produto FOREIGN KEY (cod_produto) REFERENCES PRODUTO (cod_produto),
    CONSTRAINT fk_chamado_cod_cliente FOREIGN KEY (cod_cliente) REFERENCES CLIENTE (cod_cliente),
    CONSTRAINT ck_sta_chamado CHECK (sta_chamado IN ('A', 'E', 'C', 'F', 'X')),
    CONSTRAINT ck_chamado_ind_satisfacao CHECK ((ind_satisfacao >= 1 AND ind_satisfacao <= 10)),
    CONSTRAINT ck_tip_chamado CHECK (sta_chamado IN ('1', '2'))
);

COMMENT ON COLUMN CHAMADO.cod_chamado IS 'O código de identificação do chamado deve ser um número sequencial para ser utilizado como SEQUENCE ou IDENTITY e crescente, de acordo com novos chamados abertos pelo cliente.';

COMMENT ON COLUMN CHAMADO.cod_produto IS 'O código de identificação do produto é uma chave estrangeira que faz referência ao código do produto na entidade Produto.';

COMMENT ON COLUMN CHAMADO.cod_cliente IS 'O código de identificação do cliente é uma chave estrangeira que faz referência ao código do cliente ma entidade Cliente.';

COMMENT ON COLUMN CHAMADO.sta_chamado IS ' O status do chamado é uma tributo obrigatório e deve-se classificar cada etapa do chamado em "A" (Aberto), "E" (Em andamento), "C" - (Cancelado), "F" (Fechado com sucesso) e "X" (Fechado com insatisfação do cliente).';

COMMENT ON COLUMN CHAMADO.des_chamado IS 'Descrição do chamado'; 

COMMENT ON COLUMN CHAMADO.tip_chamado IS 'O tipo do chamado o classifica como sugestão (1) ou reclamação (2)';

COMMENT ON COLUMN CHAMADO.dat_abertura IS 'Data e hora de abertura do chamado.';

COMMENT ON COLUMN CHAMADO.dat_fechamento IS 'Data e hora de fechamento do chamado.';

COMMENT ON COLUMN CHAMADO.tot_horas_chamado IS 'Calcula a duração total do chamado em horas, será gerado quando existir data de fechamento.';

COMMENT ON COLUMN CHAMADO.ind_satisfacao IS 'Campo preenchido pelo cliente indicando a nota de satisfação pelo atendimento que vai de 1 a 10, sendo 1 compleatemnte insatisfeito e 10 muito satisfeito.';

/*
    SCRIPT CRIAÇÃO TABELA ITEM_CHAMADO
*/

CREATE TABLE ITEM_CHAMADO (
    cod_item_chamado NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL,
    cod_chamado NUMBER NOT NULL,
    txt_mensagem VARCHAR(4000) NOT NULL,
    CONSTRAINT pk_item_chamado PRIMARY KEY (cod_item_chamado, cod_chamado),
    CONSTRAINT fk_item_chamado_cod_chamado FOREIGN KEY (cod_chamado) REFERENCES CHAMADO (cod_chamado)
);

COMMENT ON COLUMN ITEM_CHAMADO.cod_item_chamado IS 'Identificador unico da tabela';

COMMENT ON COLUMN ITEM_CHAMADO.cod_chamado IS 'Chave estrangeira com a tabela Chamado';

COMMENT ON COLUMN ITEM_CHAMADO.txt_mensagem IS 'Campo de mensagem da interação no chamado';

/*
    Script criação Tabela DEPARTAMENTO:

*/

CREATE TABLE DEPARTAMENTO (
   cod_departamento NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   nom_departamento VARCHAR(15) NOT NULL,

   CONSTRAINT departamento_pk PRIMARY KEY (cod_departamento)
);

COMMENT ON COLUMN DEPARTAMENTO.cod_departamento IS 'Código único do departamento';

/*
    Script criação Tabela FUNCIONARIO:

*/

CREATE TABLE FUNCIONARIO (
    cod_funcionario NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    nom_funcionario VARCHAR(50) NOT NULL,
    num_cpf_funcionario NUMBER (14) NOT NULL,
    dat_nascimento DATE NOT NULL,
    num_telefone_funcionario NUMBER (9) NOT NULL,
    ddd_telefone_funcionario NUMBER (2) NOT NULL,
    email_funcionario VARCHAR(30) NOT NULL,
    cargo_funcionario VARCHAR(20) NOT NULL,
    cod_departamento NUMBER NOT NULL,
    CONSTRAINT funcionario_pk PRIMARY KEY (cod_funcionario),
    CONSTRAINT fk_funcionario_codigo_departamento FOREIGN KEY (cod_departamento) REFERENCES DEPARTAMENTO (cod_departamento),
    CONSTRAINT uk_cpf_funcionario UNIQUE (num_cpf_funcionario)
);


COMMENT ON COLUMN FUNCIONARIO.cod_funcionario IS 'Código único do funcionário';

COMMENT ON COLUMN FUNCIONARIO.cod_departamento IS 'Chaves Estrangeira com a tabela departamento';

COMMENT ON COLUMN FUNCIONARIO.nom_funcionario IS 'Nome completo do Funcionario';

COMMENT ON COLUMN FUNCIONARIO.num_cpf_funcionario IS 'Numero CPF do Funcionario';

COMMENT ON COLUMN FUNCIONARIO.dat_nascimento IS 'Data de nascimento';

COMMENT ON COLUMN FUNCIONARIO.num_telefone_funcionario IS 'Este atributo é composto, deve ter outro de ddd e outro número do telefone';

COMMENT ON COLUMN FUNCIONARIO.ddd_telefone_funcionario IS 'DDD DO Telefone';

COMMENT ON COLUMN FUNCIONARIO.email_funcionario IS 'Email do Funcionario';

COMMENT ON COLUMN FUNCIONARIO.cargo_funcionario IS 'Cargo do Funcionario';

    /*
        Script criação Tabela CHAMADO_FUNCIONARIO:
    
    */
    
    CREATE TABLE CHAMADO_FUNCIONARIO (
        cod_chamado_funcionario NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        cod_chamado NUMBER NOT NULL,
        cod_funcionario NUMBER NOT NULL,
        
        CONSTRAINT pk_chamado_funcionario PRIMARY KEY (cod_chamado_funcionario),
        CONSTRAINT fk_cod_funcionario FOREIGN KEY (cod_funcionario) REFERENCES FUNCIONARIO (cod_funcionario),
        CONSTRAINT fk_cod_chamado FOREIGN KEY (cod_chamado) REFERENCES CHAMADO (cod_chamado),
        CONSTRAINT uk_chamado_funcionario UNIQUE (cod_chamado,cod_funcionario)
    );
    
DROP TABLE CLIENTE_PF;

DROP TABLE CLIENTE_PJ;

DROP TABLE CHAMADO_FUNCIONARIO;

DROP TABLE ITEM_CHAMADO;

DROP TABLE CHAMADO;

DROP TABLE VISUALIZACAO_VIDEO;

DROP TABLE VIDEO_PRODUTO;

DROP TABLE FORNECEDOR_VIDEO;

DROP TABLE CLASSIFICACAO_VIDEO;

DROP TABLE PRODUTO;

DROP TABLE CATEGORIA_PRODUTO;

DROP TABLE CLIENTE;

DROP TABLE FUNCIONARIO;

DROP TABLE DEPARTAMENTO;


